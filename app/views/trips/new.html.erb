<%= tinymce plugins: ["uploadimage"]%>

<!-- Post header begins-->
<div id="post_header" class="container" style="height:40px">
</div>
<div id="content-top-border" class="container">
</div>
<!-- Post header ends -->
<!-- Content begins -->
<div id="content">
  <div class="container background-white">
    <div class="row margin-vert-30">
      <!-- Main Column -->
      <div class="col-md-12">
        <!-- Main Content -->
        <div class="headline">
          <h2>Your Journy Begins!</h2>
        </div>
        <p>Follow the Sign Board and share your journy</p>
        <br>
        <!-- Contact Form -->
        <%= form_for :trip, url: trips_path do |f| %>
        <label>Title</label>
        <div class="row margin-bottom-20">
          <div class="col-md-6 col-md-offset-0">
            <%= f.text_field :title, class: "form-control" %>
          </div>
        </div>
        <label>Description</label>
        <div class="row margin-bottom-20">
          <div class="col-md-8 col-md-offset-0">
            <%= f.text_area :description, rows: "8", class: "form-control"%>
          </div>
        </div>
        <label>Display Picture</label>
        <div class="row margin-bottom-20">
          <div class="col-sm-3">
            <div class="event-title">
             <img />
           </div>
         </div>
         <div class="col-sm-3">
          <%= f.file_field :main_image, id: "exampleInputFile", class: 'file' %>
        </div>
        <div class="col-sm-2"></div>
      </div>
      <label>Story Route</label>
      <!-- Create route starts -->
      <div class="row margin-bottom-20">
       <div class="col-md-6 margin-top-20 form-horizontal scroll" id="calculate-route">
         <div id="field1" class=" col-md-9">
           <a id="from-link" href="#">Get my position</a>
           <%= f.text_field :from_address, id: 'from', class: "form-control margin-bottom-20", required: true, placeholder: "From address / Point - A "%>
         </div>
         <button id="b1" class="btn add-more add-btn-margin-top" type="button">+</button>

         <div class="col-md-9 margin-top-20">
           <a id="to-link" href="#">Get my position</a>
           <%= f.text_field :to_address, id: 'to', class: "form-control", required: true, placeholder: "To address" %>
         </div>
       </div>

       <div class="col-md-5 map-style">
         <div id="createRoute"></div>
         <p id="error"></p>
       </div>
     </div>
     <div class="margin-left margin-top-20 margin-bottom-20">
      <button class= "btn btn-primary ok-btn-padding" id="calculateRoute" >Check Route </button>
      <button type="reset" class="btn btn-warning ok-btn-padding">Reset</button>
    </div>
    <!-- Create route ends -->
    <!-- Start tinymce text area -->
    <%= f.text_area :content, rows: "8", class: "tinymce", placeholder: "What is your story" %>
    <!-- Ends tinymce text area -->
    <p class="margin-top-20">
     <%= f.submit "Submit", class: "btn btn-primary" %>
   </p>
   <%end%>
   <!-- End Contact Form -->
   <!-- End Main Content -->
 </div>
 <!-- End Main Column -->
</div>
</div>
</div>
<!-- Content Ends -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_21910Bt7xVDIzMDB_UXtpCSC75BO0aw&libraries=places&callback=initMap" async defer></script>
<script>

  function initMap() {
    var map = new google.maps.Map(document.getElementById('createRoute'),{
      center: {lat: 20.5937, lng: 78.9629},
      zoom: 5
    });
    /** autocomplete form and to text_field */
    var from = /** @type {!HTMLInputElement} */(
      document.getElementById('from'));

    var to = /** @type {!HTMLInputElement} */(
      document.getElementById('to'));

    var autocomplete = new google.maps.places.Autocomplete(from);
    autocomplete.bindTo('bounds', map);

    var autocomplete = new google.maps.places.Autocomplete(to);
    autocomplete.bindTo('bounds', map);
  }

  $(document).ready(function() {
        // If the browser supports the Geolocation API
        if (typeof navigator.geolocation == "undefined") {
          $("#error").text("Your browser doesn't support the Geolocation API");
          return;
        }

        $("#from-link, #to-link").click(function(event) {
          event.preventDefault();
          var addressId = this.id.substring(0, this.id.indexOf("-"));

          navigator.geolocation.getCurrentPosition(function(position) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({
              "location": new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
            },
            function(results, status) {
              if (status == google.maps.GeocoderStatus.OK)
                $("#" + addressId).val(results[0].formatted_address);
              else
                $("#error").append("Unable to retrieve your address<br />");
            });
          },
          function(positionError){
            $("#error").append("Error: " + positionError.message + "<br />");
          },
          {
            enableHighAccuracy: true,
            timeout: 10 * 1000 // 10 seconds
          });
        });
        var waypoints =[]
        var checkpoints =[]
        $("#calculateRoute").click(function(event) {
          event.preventDefault();
          if (waypointArray.length > 0){
            for(i=0; i< waypointArray.length; i++){
              waypoints.push({location: (document.getElementById('waypoint-field' + waypointArray[i])).value})
              checkpoints.push(waypoints[i].location)
            }
          }
          calculateRoute($("#from").val(), waypoints, $("#to").val());
        });

      });

  var count = 0;
  var waypointArray = []

  $(document).ready(function(){
    var next = 1;
    var preview = $(".event-title img");
    
    $(".file").change(function(event){
     var input = $(event.currentTarget);
     var file = input[0].files[0];
     var reader = new FileReader();
     reader.onload = function(e){
       image_base64 = e.target.result;
       preview.attr("src", image_base64);
     };
     reader.readAsDataURL(file);
   });

    $(".add-more").click(function(e){
      e.preventDefault();
      if(count == 0){
        var addto = "#field" + 1;
      }
      else if (document.getElementById('field' + (next)) == null){
        while (document.getElementById('field' + (next)) == null){next -- ;}
        var addto = "#field" + next;
      }
      else {
        var addto = "#field" + next;
      } 
      next = next + 1;
      var removeBtnId = "remove" + (next);
      var newIn = '<div class ="col-md-9 display-flex margin-bottom-20" id= "field' + next + '"> <div class="col-md-11 margin-l"> <input autocomplete="off" class="col-md-6 input form-control" id= "waypoint-field' + next + '" name= trip[checkpoint' + next + '] type="text"></div> <div class="col-md-1"><button id="remove' + (next) + '" class="btn btn-danger remove-me" onclick="javascript:removeElement(event, remove' + next +'); return false;">-</button></div> </div>';

      var newInput = $(newIn);
      $(addto).after(newInput);
      waypointArray.push(next)
      count ++;
      // add auto complete to all extra fields
      $("#field" + next).attr('data-source',$(addto).attr('data-source'));
      $("#count").val(next);

      var map = new google.maps.Map(document.getElementById('createRoute'),{
        center: {lat: 20.5937, lng: 78.9629},
        zoom: 5
      });
      var waypoint = /** @type {!HTMLInputElement} */(
        document.getElementById('waypoint-field' + next));
      var autocomplete = new google.maps.places.Autocomplete(waypoint);
      autocomplete.bindTo('bounds', map);
      // end autocomplete

    });
  });

  function removeElement(e, buttonId) {
    e.preventDefault();
    var fieldNum = buttonId.id.charAt(buttonId.id.length-1);
    var fieldID = "#field" + fieldNum;
    $(buttonId).remove();
    $(fieldID).remove();
    var index = waypointArray.indexOf(fieldNum)
    if (index > -1) {
      waypointArray.splice(index, 1);
    }
    count --;
  }
</script>

